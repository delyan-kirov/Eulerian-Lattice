MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 99
# CSE_active_eliminated_expressions = 398
# CSE_active_total_size = 801
**VARIABLES**
DISCRETE M_FunctionND_00001_00002 #
{0..5}
DISCRETE M_FunctionND_00001_00003 #
{0..5}
DISCRETE M_FunctionND_00001_00004 #
{0..5}
DISCRETE M_FunctionND_00002_00003 #
{0..5}
DISCRETE M_FunctionND_00002_00004 #
{0..5}
DISCRETE M_FunctionND_00003_00004 #
{0..5}
DISCRETE J_FunctionND_00001_00002 #
{0..5}
**CONSTRAINTS**
w-inintervalset(J_FunctionND_00001_00002, [0,0,2,5])
**VARIABLES**
DISCRETE J_FunctionND_00001_00003 #
{0..5}
**CONSTRAINTS**
w-inintervalset(J_FunctionND_00001_00003, [0,0,2,5])
**VARIABLES**
DISCRETE J_FunctionND_00001_00004 #
{0..5}
**CONSTRAINTS**
w-inintervalset(J_FunctionND_00001_00004, [0,0,2,5])
**VARIABLES**
DISCRETE J_FunctionND_00002_00003 #
{0..5}
**CONSTRAINTS**
w-inintervalset(J_FunctionND_00002_00003, [0,1,3,5])
**VARIABLES**
DISCRETE J_FunctionND_00002_00004 #
{0..5}
**CONSTRAINTS**
w-inintervalset(J_FunctionND_00002_00004, [0,1,3,5])
**VARIABLES**
DISCRETE J_FunctionND_00003_00004 #
{0..5}
**CONSTRAINTS**
w-inintervalset(J_FunctionND_00003_00004, [0,2,4,5])
**VARIABLES**
DISCRETE R_Function1D_00002 #
{1..4}
DISCRETE R_Function1D_00003 #
{1..4}
DISCRETE R_Function1D_00004 #
{1..4}
DISCRETE R_Function1D_00005 #
{2..5}
DISCRETE C_FunctionND_00002_00000 #
{0..1}
DISCRETE C_FunctionND_00002_00001 #
{0..1}
DISCRETE C_FunctionND_00003_00000 #
{0..1}
DISCRETE C_FunctionND_00003_00001 #
{0..1}
DISCRETE C_FunctionND_00003_00002 #
{0..1}
DISCRETE C_FunctionND_00004_00000 #
{0..1}
DISCRETE C_FunctionND_00004_00001 #
{0..1}
DISCRETE C_FunctionND_00004_00002 #
{0..1}
DISCRETE C_FunctionND_00004_00003 #
{0..1}
DISCRETE C_FunctionND_00005_00001 #
{0..1}
DISCRETE C_FunctionND_00005_00002 #
{0..1}
DISCRETE C_FunctionND_00005_00003 #
{0..1}
DISCRETE aux9 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], (M_FunctionND_00002_00004 + 1))
{0..5}
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], (J_FunctionND_00002_00004 + 1))
{0..5}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], (1 + M_FunctionND_00001_00003))
{0..5}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], (M_FunctionND_00002_00004 + 1))
{0..5}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], (M_FunctionND_00002_00003 + 1))
{0..5}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], (1 + J_FunctionND_00001_00004))
{0..5}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], (J_FunctionND_00002_00003 + 1))
{0..5}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], (J_FunctionND_00002_00004 + 1))
{0..5}
BOOL aux24 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00002%2)) /\ (J_FunctionND_00002_00004=4))
BOOL aux28 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00002%2)) /\ (J_FunctionND_00002_00003=3))
BOOL aux29 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00003%2)) /\ (J_FunctionND_00002_00003=3))
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00002%2)) /\ (J_FunctionND_00002_00003=3))
BOOL aux32 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00002%2)) /\ (J_FunctionND_00002_00004=4))
BOOL aux34 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00003%2)) /\ (J_FunctionND_00002_00003=3))
BOOL aux37 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00004%2)) /\ (J_FunctionND_00002_00004=4))
BOOL aux38 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00004%2)) /\ (J_FunctionND_00002_00004=4))
BOOL aux40 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00003%2)) /\ (J_FunctionND_00003_00004=4))
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00003%2)) /\ (J_FunctionND_00003_00004=4))
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00004%2)) /\ (J_FunctionND_00003_00004=4))
BOOL aux46 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00004%2)) /\ (J_FunctionND_00003_00004=4))
BOOL aux48 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00002%2)) /\ (2=J_FunctionND_00001_00002))
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00003%2)) /\ (3=J_FunctionND_00001_00003))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00004%2)) /\ (4=J_FunctionND_00001_00004))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00003%2)) /\ (3=J_FunctionND_00001_00003))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00004%2)) /\ (4=J_FunctionND_00001_00004))
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00001%2)) /\ (4=J_FunctionND_00001_00004))
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00001%2)) /\ (3=J_FunctionND_00001_00003))
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: ((1=(R_Function1D_00001%2)) /\ (2=J_FunctionND_00001_00002))
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: ((0=(R_Function1D_00002%2)) /\ (2=J_FunctionND_00001_00002))
DISCRETE aux72 #Active-CSE: 8 occurrences of this expression or equivalent: (J_FunctionND_00002_00003 + 1)
{1..6}
DISCRETE aux73 #Active-CSE: 8 occurrences of this expression or equivalent: (M_FunctionND_00002_00003 + 1)
{1..6}
BOOL aux74 #Active-CSE: 30 occurrences of this expression or equivalent: (R_Function1D_00002%2)
BOOL aux75 #Active-CSE: 30 occurrences of this expression or equivalent: (R_Function1D_00004%2)
DISCRETE aux76 #Active-CSE: 8 occurrences of this expression or equivalent: (M_FunctionND_00002_00004 + 1)
{1..6}
DISCRETE aux77 #Active-CSE: 8 occurrences of this expression or equivalent: (J_FunctionND_00002_00004 + 1)
{1..6}
DISCRETE aux78 #Active-CSE: 8 occurrences of this expression or equivalent: (1 + J_FunctionND_00001_00004)
{1..6}
DISCRETE aux79 #Active-CSE: 8 occurrences of this expression or equivalent: (J_FunctionND_00003_00004 + 1)
{1..6}
DISCRETE aux86 #Active-CSE: 8 occurrences of this expression or equivalent: (1 + J_FunctionND_00001_00003)
{1..6}
DISCRETE aux87 #Active-CSE: 4 occurrences of this expression or equivalent: (R_Function1D_00002 + 1)
{2..5}
DISCRETE aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (R_Function1D_00003 + 1)
{2..5}
DISCRETE aux91 #Active-CSE: 8 occurrences of this expression or equivalent: (1 + M_FunctionND_00001_00004)
{1..6}
BOOL aux92 #Active-CSE: 30 occurrences of this expression or equivalent: (R_Function1D_00003%2)
BOOL aux93 #Active-CSE: 10 occurrences of this expression or equivalent: (R_Function1D_00005%2)
DISCRETE aux94 #Active-CSE: 8 occurrences of this expression or equivalent: (M_FunctionND_00003_00004 + 1)
{1..6}
DISCRETE aux95 #Active-CSE: 8 occurrences of this expression or equivalent: (1 + M_FunctionND_00001_00002)
{1..6}
DISCRETE aux96 #Active-CSE: 8 occurrences of this expression or equivalent: (1 + M_FunctionND_00001_00003)
{1..6}
DISCRETE aux97 #Active-CSE: 8 occurrences of this expression or equivalent: (1 + J_FunctionND_00001_00002)
{1..6}
BOOL aux100 #(C_FunctionND_00002_00000=1)
BOOL aux102 #(C_FunctionND_00002_00001=1)
BOOL aux104 #((J_FunctionND_00002_00003 != 3) /\ (3 != J_FunctionND_00001_00003))
BOOL aux106 #((3=J_FunctionND_00001_00003) /\ ((J_FunctionND_00002_00003 != 3) \/ (2 != J_FunctionND_00001_00002)))
BOOL aux108 #(J_FunctionND_00002_00003=3)
BOOL aux110 #((J_FunctionND_00002_00004 != 4) /\ (4 != J_FunctionND_00001_00004) /\ (J_FunctionND_00003_00004 != 4))
BOOL aux112 #((4=J_FunctionND_00001_00004) /\ ((3 != J_FunctionND_00001_00003) \/ (J_FunctionND_00003_00004 != 4)) /\ ((J_FunctionND_00002_00004 != 4) \/ (2 != J_FunctionND_00001_00002)))
BOOL aux114 #(((J_FunctionND_00002_00003 != 3) \/ (J_FunctionND_00003_00004 != 4)) /\ (J_FunctionND_00002_00004=4))
BOOL aux116 #(J_FunctionND_00003_00004=4)
BOOL aux118 #(1=C_FunctionND_00005_00001)
BOOL aux120 #((J_FunctionND_00002_00003 != 3) /\ (J_FunctionND_00002_00004 != 4))
BOOL aux122 #(J_FunctionND_00003_00004 != 4)
BOOL aux123 #(C_FunctionND_00002_00000=1)
BOOL aux124 #(C_FunctionND_00002_00001=1)
BOOL aux125 #(C_FunctionND_00003_00000=1)
BOOL aux126 #(C_FunctionND_00003_00001=1)
BOOL aux127 #(C_FunctionND_00003_00002=1)
BOOL aux128 #(1=C_FunctionND_00004_00000)
BOOL aux129 #(1=C_FunctionND_00004_00001)
BOOL aux130 #(1=C_FunctionND_00004_00002)
BOOL aux131 #(1=C_FunctionND_00004_00003)
BOOL aux132 #(1=C_FunctionND_00005_00001)
BOOL aux133 #(1=C_FunctionND_00005_00002)
BOOL aux134 #(1=C_FunctionND_00005_00003)
BOOL aux135 #((!aux74) /\ (J_FunctionND_00002_00003=3) /\ (2=J_FunctionND_00001_00002))
BOOL aux136 #(aux74 /\ (J_FunctionND_00002_00003=3) /\ (2=J_FunctionND_00001_00002))
BOOL aux137 #((!aux92) /\ (3=J_FunctionND_00001_00003) /\ (J_FunctionND_00003_00004=4))
BOOL aux138 #((!aux74) /\ (J_FunctionND_00002_00004=4) /\ (2=J_FunctionND_00001_00002))
BOOL aux139 #(aux92 /\ (3=J_FunctionND_00001_00003) /\ (J_FunctionND_00003_00004=4))
BOOL aux140 #(aux74 /\ (J_FunctionND_00002_00004=4) /\ (2=J_FunctionND_00001_00002))
BOOL aux141 #(aux92 /\ (J_FunctionND_00002_00003=3) /\ (J_FunctionND_00003_00004=4))
BOOL aux142 #((!aux92) /\ (J_FunctionND_00002_00003=3) /\ (J_FunctionND_00003_00004=4))
**SEARCH**
PRINT[[M_FunctionND_00001_00002],[M_FunctionND_00001_00003],[M_FunctionND_00001_00004],[M_FunctionND_00002_00003],[M_FunctionND_00002_00004],[M_FunctionND_00003_00004],[J_FunctionND_00001_00002],[J_FunctionND_00001_00003],[J_FunctionND_00001_00004],[J_FunctionND_00002_00003],[J_FunctionND_00002_00004],[J_FunctionND_00003_00004],[R_Function1D_00002],[R_Function1D_00003],[R_Function1D_00004],[R_Function1D_00005],[C_FunctionND_00002_00000],[C_FunctionND_00002_00001],[C_FunctionND_00003_00000],[C_FunctionND_00003_00001],[C_FunctionND_00003_00002],[C_FunctionND_00004_00000],[C_FunctionND_00004_00001],[C_FunctionND_00004_00002],[C_FunctionND_00004_00003],[C_FunctionND_00005_00001],[C_FunctionND_00005_00002],[C_FunctionND_00005_00003]]
**CONSTRAINTS**
reify(diseq(2,J_FunctionND_00001_00002), aux100)
reify(w-literal(C_FunctionND_00002_00000,1), aux100)
reify(w-literal(J_FunctionND_00001_00002,2), aux102)
reify(w-literal(C_FunctionND_00002_00001,1), aux102)
reify(w-literal(C_FunctionND_00003_00000,1), aux104)
reify(watched-and({diseq(J_FunctionND_00002_00003,3),diseq(3,J_FunctionND_00001_00003)}), aux104)
reify(w-literal(C_FunctionND_00003_00001,1), aux106)
reify(watched-and({w-literal(J_FunctionND_00001_00003,3),watched-or({diseq(J_FunctionND_00002_00003,3),diseq(2,J_FunctionND_00001_00002)})}), aux106)
reify(w-literal(C_FunctionND_00003_00002,1), aux108)
reify(w-literal(J_FunctionND_00002_00003,3), aux108)
reify(w-literal(C_FunctionND_00004_00000,1), aux110)
reify(watched-and({diseq(J_FunctionND_00002_00004,4),diseq(4,J_FunctionND_00001_00004),diseq(J_FunctionND_00003_00004,4)}), aux110)
reify(w-literal(C_FunctionND_00004_00001,1), aux112)
reify(watched-and({w-literal(J_FunctionND_00001_00004,4),watched-or({diseq(3,J_FunctionND_00001_00003),diseq(J_FunctionND_00003_00004,4)}),watched-or({diseq(J_FunctionND_00002_00004,4),diseq(2,J_FunctionND_00001_00002)})}), aux112)
reify(w-literal(C_FunctionND_00004_00002,1), aux114)
reify(watched-and({watched-or({diseq(J_FunctionND_00002_00003,3),diseq(J_FunctionND_00003_00004,4)}),w-literal(J_FunctionND_00002_00004,4)}), aux114)
reify(w-literal(C_FunctionND_00004_00003,1), aux116)
reify(w-literal(J_FunctionND_00003_00004,4), aux116)
reify(watched-and({diseq(2,J_FunctionND_00001_00002),diseq(3,J_FunctionND_00001_00003),diseq(4,J_FunctionND_00001_00004)}), aux118)
reify(w-literal(C_FunctionND_00005_00001,1), aux118)
reify(w-literal(C_FunctionND_00005_00002,1), aux120)
reify(watched-and({diseq(J_FunctionND_00002_00003,3),diseq(J_FunctionND_00002_00004,4)}), aux120)
reify(w-literal(C_FunctionND_00005_00003,1), aux122)
reify(diseq(J_FunctionND_00003_00004,4), aux122)
reify(w-literal(C_FunctionND_00002_00000,1), aux123)
reify(w-literal(C_FunctionND_00002_00001,1), aux124)
reify(w-literal(C_FunctionND_00003_00000,1), aux125)
reify(w-literal(C_FunctionND_00003_00001,1), aux126)
reify(w-literal(C_FunctionND_00003_00002,1), aux127)
reify(w-literal(C_FunctionND_00004_00000,1), aux128)
reify(w-literal(C_FunctionND_00004_00001,1), aux129)
reify(w-literal(C_FunctionND_00004_00002,1), aux130)
reify(w-literal(C_FunctionND_00004_00003,1), aux131)
reify(w-literal(C_FunctionND_00005_00001,1), aux132)
reify(w-literal(C_FunctionND_00005_00002,1), aux133)
reify(w-literal(C_FunctionND_00005_00003,1), aux134)
reify(watched-and({w-literal(aux74,0),w-literal(J_FunctionND_00002_00003,3),w-literal(J_FunctionND_00001_00002,2)}), aux135)
reify(watched-and({w-literal(aux74,1),w-literal(J_FunctionND_00002_00003,3),w-literal(J_FunctionND_00001_00002,2)}), aux136)
reify(watched-and({w-literal(aux92,0),w-literal(J_FunctionND_00001_00003,3),w-literal(J_FunctionND_00003_00004,4)}), aux137)
reify(watched-and({w-literal(aux74,0),w-literal(J_FunctionND_00002_00004,4),w-literal(J_FunctionND_00001_00002,2)}), aux138)
reify(watched-and({w-literal(aux92,1),w-literal(J_FunctionND_00001_00003,3),w-literal(J_FunctionND_00003_00004,4)}), aux139)
reify(watched-and({w-literal(aux74,1),w-literal(J_FunctionND_00002_00004,4),w-literal(J_FunctionND_00001_00002,2)}), aux140)
reify(watched-and({w-literal(aux92,1),w-literal(J_FunctionND_00002_00003,3),w-literal(J_FunctionND_00003_00004,4)}), aux141)
reify(watched-and({w-literal(aux92,0),w-literal(J_FunctionND_00002_00003,3),w-literal(J_FunctionND_00003_00004,4)}), aux142)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux86, aux21)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux97, aux23)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux78, aux23)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux86, aux22)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux94, aux14)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux79, aux21)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux96, aux17)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux91, aux16)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux79, aux10)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux76, aux9)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux77, aux10)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux91, aux14)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux95, aux17)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux95, aux16)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux96, aux14)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux94, aux9)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux76, aux16)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux73, aux17)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux73, aux9)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux72, aux10)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux97, aux22)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux78, aux21)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux72, aux22)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux77, aux23)
reify(watched-and({w-literal(aux74,1),w-literal(J_FunctionND_00002_00004,4)}), aux24)
reify(watched-and({w-literal(aux74,1),w-literal(J_FunctionND_00002_00003,3)}), aux28)
reify(watched-and({w-literal(aux92,0),w-literal(J_FunctionND_00002_00003,3)}), aux29)
reify(watched-and({w-literal(aux74,0),w-literal(J_FunctionND_00002_00003,3)}), aux30)
reify(watched-and({w-literal(aux74,0),w-literal(J_FunctionND_00002_00004,4)}), aux32)
reify(watched-and({w-literal(aux92,1),w-literal(J_FunctionND_00002_00003,3)}), aux34)
reify(watched-and({w-literal(aux75,0),w-literal(J_FunctionND_00002_00004,4)}), aux37)
reify(watched-and({w-literal(aux75,1),w-literal(J_FunctionND_00002_00004,4)}), aux38)
reify(watched-and({w-literal(aux92,0),w-literal(J_FunctionND_00003_00004,4)}), aux40)
reify(watched-and({w-literal(aux92,1),w-literal(J_FunctionND_00003_00004,4)}), aux42)
reify(watched-and({w-literal(aux75,0),w-literal(J_FunctionND_00003_00004,4)}), aux43)
reify(watched-and({w-literal(aux75,1),w-literal(J_FunctionND_00003_00004,4)}), aux46)
reify(watched-and({w-literal(aux74,1),w-literal(J_FunctionND_00001_00002,2)}), aux48)
reify(watched-and({w-literal(aux92,0),w-literal(J_FunctionND_00001_00003,3)}), aux51)
reify(watched-and({w-literal(aux75,0),w-literal(J_FunctionND_00001_00004,4)}), aux54)
reify(watched-and({w-literal(aux92,1),w-literal(J_FunctionND_00001_00003,3)}), aux55)
reify(watched-and({w-literal(aux75,1),w-literal(J_FunctionND_00001_00004,4)}), aux57)
reify(w-literal(J_FunctionND_00001_00004,4), aux66)
reify(w-literal(J_FunctionND_00001_00003,3), aux67)
reify(w-literal(J_FunctionND_00001_00002,2), aux68)
reify(watched-and({w-literal(aux74,0),w-literal(J_FunctionND_00001_00002,2)}), aux69)
modulo(R_Function1D_00002,2,aux74)
modulo(R_Function1D_00004,2,aux75)
reify(ineq(R_Function1D_00003, R_Function1D_00002, -1), 0)
ineq(R_Function1D_00003, R_Function1D_00004, 0)
reify(ineq(R_Function1D_00004, R_Function1D_00002, -1), 0)
modulo(R_Function1D_00003,2,aux92)
modulo(R_Function1D_00005,2,aux93)
watched-or({diseq(1,R_Function1D_00002),lexless([M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004],[1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004])})
watched-or({diseq(R_Function1D_00002,R_Function1D_00003),lexless([M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004],[M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004])})
watched-or({diseq(R_Function1D_00003,R_Function1D_00004),lexless([M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4],[M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004])})
watchelement_one([0, 0, 0, 0, 0, 0], aux95, 0)
watchelement_one([0, 0, 0, 0, 0, 0], aux96, 0)
watchelement_one([0, 0, 0, 0, 0, 0], aux91, 0)
watchelement_one([0, 0, 0, 0, 0, 0], aux73, 0)
watchelement_one([0, 0, 0, 0, 0, 0], aux76, 0)
watchelement_one([0, 0, 0, 0, 0, 0], aux94, 0)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux95, M_FunctionND_00001_00002)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux96, M_FunctionND_00001_00003)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux91, M_FunctionND_00001_00004)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux95, M_FunctionND_00001_00002)
watchelement_one([0, 1, 2, 3, 4, 5], aux95, M_FunctionND_00001_00002)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux96, M_FunctionND_00001_00003)
watchelement_one([0, 1, 2, 3, 4, 5], aux96, M_FunctionND_00001_00003)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux91, M_FunctionND_00001_00004)
watchelement_one([0, 1, 2, 3, 4, 5], aux91, M_FunctionND_00001_00004)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux73, M_FunctionND_00002_00003)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux76, M_FunctionND_00002_00004)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux73, M_FunctionND_00002_00003)
watchelement_one([0, 1, 2, 3, 4, 5], aux73, M_FunctionND_00002_00003)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux76, M_FunctionND_00002_00004)
watchelement_one([0, 1, 2, 3, 4, 5], aux76, M_FunctionND_00002_00004)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux94, M_FunctionND_00003_00004)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux94, M_FunctionND_00003_00004)
watchelement_one([0, 1, 2, 3, 4, 5], aux94, M_FunctionND_00003_00004)
watchelement_one([0, 1, 2, 3, 4, 5], aux97, J_FunctionND_00001_00002)
watchelement_one([0, 1, 2, 3, 4, 5], aux86, J_FunctionND_00001_00003)
watchelement_one([0, 1, 2, 3, 4, 5], aux78, J_FunctionND_00001_00004)
watchelement_one([0, 1, 2, 3, 4, 5], aux72, J_FunctionND_00002_00003)
watchelement_one([0, 1, 2, 3, 4, 5], aux77, J_FunctionND_00002_00004)
watchelement_one([0, 1, 2, 3, 4, 5], aux79, J_FunctionND_00003_00004)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux97, J_FunctionND_00001_00002)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux86, J_FunctionND_00001_00003)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux78, J_FunctionND_00001_00004)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux97, J_FunctionND_00001_00002)
watchelement_one([5, 5, 5, 5, 5, 5], aux97, 5)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux86, J_FunctionND_00001_00003)
watchelement_one([5, 5, 5, 5, 5, 5], aux86, 5)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux78, J_FunctionND_00001_00004)
watchelement_one([5, 5, 5, 5, 5, 5], aux78, 5)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux72, J_FunctionND_00002_00003)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux77, J_FunctionND_00002_00004)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux72, J_FunctionND_00002_00003)
watchelement_one([5, 5, 5, 5, 5, 5], aux72, 5)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux77, J_FunctionND_00002_00004)
watchelement_one([5, 5, 5, 5, 5, 5], aux77, 5)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux79, J_FunctionND_00003_00004)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux79, J_FunctionND_00003_00004)
watchelement_one([5, 5, 5, 5, 5, 5], aux79, 5)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux97, 1)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux86, 1)
watchelement_one([0, 1, M_FunctionND_00001_00002, M_FunctionND_00001_00003, M_FunctionND_00001_00004, 1], aux78, 1)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux97, 2)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux72, 2)
watchelement_one([0, M_FunctionND_00001_00002, 2, M_FunctionND_00002_00003, M_FunctionND_00002_00004, 2], aux77, 2)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux86, 3)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux72, 3)
watchelement_one([0, M_FunctionND_00001_00003, M_FunctionND_00002_00003, 3, M_FunctionND_00003_00004, 3], aux79, 3)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux78, 4)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux77, 4)
watchelement_one([0, M_FunctionND_00001_00004, M_FunctionND_00002_00004, M_FunctionND_00003_00004, 4, 4], aux79, 4)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux95, 1)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux96, 1)
watchelement_one([1, 1, J_FunctionND_00001_00002, J_FunctionND_00001_00003, J_FunctionND_00001_00004, 5], aux91, 1)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux95, 2)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux73, 2)
watchelement_one([2, J_FunctionND_00001_00002, 2, J_FunctionND_00002_00003, J_FunctionND_00002_00004, 5], aux76, 2)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux96, 3)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux73, 3)
watchelement_one([3, J_FunctionND_00001_00003, J_FunctionND_00002_00003, 3, J_FunctionND_00003_00004, 5], aux94, 3)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux91, 4)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux76, 4)
watchelement_one([4, J_FunctionND_00001_00004, J_FunctionND_00002_00004, J_FunctionND_00003_00004, 4, 5], aux94, 4)
ineq(R_Function1D_00002, R_Function1D_00005, 0)
ineq(R_Function1D_00003, R_Function1D_00005, 0)
ineq(R_Function1D_00004, R_Function1D_00005, 0)
watched-or({diseq(2,J_FunctionND_00001_00002),ineq(1, R_Function1D_00002, -1)})
watched-or({diseq(3,J_FunctionND_00001_00003),ineq(1, R_Function1D_00003, -1)})
watched-or({diseq(J_FunctionND_00002_00003,3),ineq(R_Function1D_00002, R_Function1D_00003, -1)})
watched-or({diseq(4,J_FunctionND_00001_00004),ineq(1, R_Function1D_00004, -1)})
watched-or({diseq(J_FunctionND_00002_00004,4),ineq(R_Function1D_00002, R_Function1D_00004, -1)})
watched-or({diseq(J_FunctionND_00003_00004,4),ineq(R_Function1D_00003, R_Function1D_00004, -1)})
ineq(R_Function1D_00002, R_Function1D_00005, -1)
ineq(R_Function1D_00003, R_Function1D_00005, -1)
ineq(R_Function1D_00004, R_Function1D_00005, -1)
reifyimply(w-literal(R_Function1D_00002,1), aux123)
reifyimply(w-literal(R_Function1D_00002,2), aux124)
reifyimply(w-literal(R_Function1D_00003,1), aux125)
reifyimply(w-literal(R_Function1D_00003,2), aux126)
reifyimply(gaceq(aux87,R_Function1D_00003), aux127)
reifyimply(w-literal(R_Function1D_00004,1), aux128)
reifyimply(w-literal(R_Function1D_00004,2), aux129)
reifyimply(gaceq(aux87,R_Function1D_00004), aux130)
reifyimply(gaceq(aux88,R_Function1D_00004), aux131)
reifyimply(w-literal(R_Function1D_00005,2), aux132)
reifyimply(gaceq(aux87,R_Function1D_00005), aux133)
reifyimply(gaceq(aux88,R_Function1D_00005), aux134)
watched-or({diseq(2,J_FunctionND_00001_00002),watched-and({weightedsumleq([-1,-1,1],[aux48,aux68,aux69],0),weightedsumgeq([-1,-1,1],[aux48,aux68,aux69],0)})})
watched-or({watched-and({weightedsumleq([1,-1,1,-1,-1],[aux135,aux136,aux51,aux55,aux67],0),weightedsumgeq([1,-1,1,-1,-1],[aux135,aux136,aux51,aux55,aux67],0)}),diseq(3,J_FunctionND_00001_00003)})
watched-or({diseq(4,J_FunctionND_00001_00004),watched-and({weightedsumleq([1,1,-1,-1,1,-1,-1],[aux137,aux138,aux139,aux140,aux54,aux57,aux66],0),weightedsumgeq([1,1,-1,-1,1,-1,-1],[aux137,aux138,aux139,aux140,aux54,aux57,aux66],0)})})
watched-or({watched-and({weightedsumleq([-1,1,1,-1],[aux28,aux29,aux30,aux34],0),weightedsumgeq([-1,1,1,-1],[aux28,aux29,aux30,aux34],0)}),diseq(J_FunctionND_00002_00003,3)})
watched-or({diseq(J_FunctionND_00002_00004,4),watched-and({weightedsumleq([-1,1,-1,1,1,-1],[aux141,aux142,aux24,aux32,aux37,aux38],0),weightedsumgeq([-1,1,-1,1,1,-1],[aux141,aux142,aux24,aux32,aux37,aux38],0)})})
watched-or({watched-and({weightedsumleq([1,-1,1,-1],[aux40,aux42,aux43,aux46],0),weightedsumgeq([1,-1,1,-1],[aux40,aux42,aux43,aux46],0)}),diseq(J_FunctionND_00003_00004,4)})
sumleq([J_FunctionND_00002_00003,1],aux72)
sumgeq([J_FunctionND_00002_00003,1],aux72)
sumleq([M_FunctionND_00002_00003,1],aux73)
sumgeq([M_FunctionND_00002_00003,1],aux73)
sumleq([M_FunctionND_00002_00004,1],aux76)
sumgeq([M_FunctionND_00002_00004,1],aux76)
sumleq([J_FunctionND_00002_00004,1],aux77)
sumgeq([J_FunctionND_00002_00004,1],aux77)
sumleq([1,J_FunctionND_00001_00004],aux78)
sumgeq([1,J_FunctionND_00001_00004],aux78)
sumleq([J_FunctionND_00003_00004,1],aux79)
sumgeq([J_FunctionND_00003_00004,1],aux79)
sumleq([1,J_FunctionND_00001_00003],aux86)
sumgeq([1,J_FunctionND_00001_00003],aux86)
sumleq([R_Function1D_00002,1],aux87)
sumgeq([R_Function1D_00002,1],aux87)
sumleq([R_Function1D_00003,1],aux88)
sumgeq([R_Function1D_00003,1],aux88)
sumleq([R_Function1D_00004,1],R_Function1D_00005)
sumgeq([R_Function1D_00004,1],R_Function1D_00005)
sumleq([1,M_FunctionND_00001_00004],aux91)
sumgeq([1,M_FunctionND_00001_00004],aux91)
sumleq([M_FunctionND_00003_00004,1],aux94)
sumgeq([M_FunctionND_00003_00004,1],aux94)
sumleq([1,M_FunctionND_00001_00002],aux95)
sumgeq([1,M_FunctionND_00001_00002],aux95)
sumleq([1,M_FunctionND_00001_00003],aux96)
sumgeq([1,M_FunctionND_00001_00003],aux96)
sumleq([1,J_FunctionND_00001_00002],aux97)
sumgeq([1,J_FunctionND_00001_00002],aux97)
weightedsumleq([-1,-1,1],[aux68,aux74,!aux74],-1)
weightedsumgeq([-1,-1,1],[aux68,aux74,!aux74],-1)
weightedsumleq([-1,1,-1,-1,1],[aux28,aux30,aux67,aux92,!aux92],-1)
weightedsumgeq([-1,1,-1,-1,1],[aux28,aux30,aux67,aux92,!aux92],-1)
weightedsumleq([-1,1,1,-1,-1,-1,1],[aux24,aux32,aux40,aux42,aux66,aux75,!aux75],-1)
weightedsumgeq([-1,1,1,-1,-1,-1,1],[aux24,aux32,aux40,aux42,aux66,aux75,!aux75],-1)
weightedsumleq([-1,-1,-1,-1,1,1,1,1],[aux74,aux75,aux92,aux93,!aux74,!aux75,!aux92,!aux93],0)
weightedsumgeq([-1,-1,-1,-1,1,1,1,1],[aux74,aux75,aux92,aux93,!aux74,!aux75,!aux92,!aux93],0)
weightedsumleq([-1,1,1,-1,-1,1,-1,1],[aux48,aux51,aux54,aux55,aux57,aux69,aux93,!aux93],1)
weightedsumgeq([-1,1,1,-1,-1,1,-1,1],[aux48,aux51,aux54,aux55,aux57,aux69,aux93,!aux93],1)
weightedsumleq([1,-1,1,-1,-1,-1,1,1],[aux29,aux34,aux37,aux38,aux74,aux93,!aux74,!aux93],0)
weightedsumgeq([1,-1,1,-1,-1,-1,1,1],[aux29,aux34,aux37,aux38,aux74,aux93,!aux74,!aux93],0)
weightedsumleq([1,-1,-1,-1,1,1],[aux43,aux46,aux92,aux93,!aux92,!aux93],0)
weightedsumgeq([1,-1,-1,-1,1,1],[aux43,aux46,aux92,aux93,!aux92,!aux93],0)
weightedsumleq([-1,-1,1,1],[aux75,aux93,!aux75,!aux93],0)
weightedsumgeq([-1,-1,1,1],[aux75,aux93,!aux75,!aux93],0)
**EOF**
